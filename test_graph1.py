from graph import *
def CreateGraph_1 ():
 G = Graph()
 AddNode(G, Node("A",1,20))
 AddNode(G, Node("B",8,17))
 AddNode(G, Node("C",15,20))
 AddNode(G, Node("D",18,15))
 AddNode(G, Node("E",2,4))
 AddNode(G, Node("F",6,5))
 AddNode(G, Node("G",12,12))
 AddNode(G, Node("H",10,3))
 AddNode(G, Node("I",19,1))
 AddNode(G, Node("J",13,5))
 AddNode(G, Node("K",3,15))
 AddNode(G, Node("L",4,10))
 AddSegment(G, "AB","A","B")
 AddSegment(G, "AE","A","E")
 AddSegment(G, "AK","A","K")
 AddSegment(G, "BA","B","A")
 AddSegment(G, "BC","B","C")
 AddSegment(G, "BF","B","F")
 AddSegment(G, "BK","B","K")
 AddSegment(G, "BG","B","G")
 AddSegment(G, "CD","C","D")
 AddSegment(G, "CG","C","G")
 AddSegment(G, "DG","D","G")
 AddSegment(G, "DH","D","H")
 AddSegment(G, "DI","D","I")
 AddSegment(G, "EF","E","F")
 AddSegment(G, "FL","F","L")
 AddSegment(G, "GB","G","B")
 AddSegment(G, "GF","G","F")
 AddSegment(G, "GH","G","H")
 AddSegment(G, "ID","I","D")
 AddSegment(G, "IJ","I","J")
 AddSegment(G, "JI","J","I")
 AddSegment(G, "KA","K","A")
 AddSegment(G, "KL","K","L")
 AddSegment(G, "LK","L","K")
 AddSegment(G, "LF","L","F")
 return G

def CreateGraph_2 ():
 F = Graph()
 AddNode(F, Node("A",1,2))
 AddNode(F, Node("B",3,12))
 AddNode(F, Node("C",21,12))
 AddNode(F, Node("D",23,4))
 AddNode(F, Node("E",12,5))
 AddNode(F, Node("F",1,6))
 AddNode(F, Node("G",26,12))
 AddNode(F, Node("H",9,3))
 AddNode(F, Node("I",21,1))
 AddSegment(F, "AB","A","B")
 AddSegment(F, "AE","A","E")
 AddSegment(F, "AD","A","D")
 AddSegment(F, "AH","A","H")
 AddSegment(F, "BI","B","I")
 AddSegment(F, "BF","B","F")
 AddSegment(F, "BH","B","H")
 AddSegment(F, "BG","B","G")
 AddSegment(F, "CB","C","B")
 AddSegment(F, "CG","C","G")
 AddSegment(F, "DG","D","G")
 AddSegment(F, "DH","D","H")
 AddSegment(F, "DI","D","I")
 return F
print ("Probando el grafo...")
G = CreateGraph_1 ()
Plot(G)
plt.show()
F=CreateGraph_2()
Plot(F)
plt.show()
PlotNode(G, "C")
GetClosest(G,15,5)
# La respuesta debe ser J
GetClosest(G,8,19)
# La respuesta debe ser B